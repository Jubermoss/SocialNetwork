#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Red_Social_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Twitter")]
	public partial class TwitterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertImagen(Imagen instance);
    partial void UpdateImagen(Imagen instance);
    partial void DeleteImagen(Imagen instance);
    partial void InsertAmigo(Amigo instance);
    partial void UpdateAmigo(Amigo instance);
    partial void DeleteAmigo(Amigo instance);
    partial void InsertMensaje(Mensaje instance);
    partial void UpdateMensaje(Mensaje instance);
    partial void DeleteMensaje(Mensaje instance);
    #endregion
		
		public TwitterDataContext() : 
				base(global::Red_Social_Data.Properties.Settings.Default.TwitterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TwitterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TwitterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TwitterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TwitterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<Imagen> Imagens
		{
			get
			{
				return this.GetTable<Imagen>();
			}
		}
		
		public System.Data.Linq.Table<Amigo> Amigos
		{
			get
			{
				return this.GetTable<Amigo>();
			}
		}
		
		public System.Data.Linq.Table<Mensaje> Mensajes
		{
			get
			{
				return this.GetTable<Mensaje>();
			}
		}
	}
	
	[Table(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _usuario_id;
		
		private string _alias;
		
		private string _password;
		
		private System.Data.Linq.Binary _foto_usuario;
		
		private int _status;
		
		private EntitySet<Album> _Albums;
		
		private EntitySet<Amigo> _Amigos;
		
		private EntitySet<Amigo> _Amigos1;
		
		private EntitySet<Mensaje> _Mensajes;
		
		private EntitySet<Mensaje> _Mensajes1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusuario_idChanging(int value);
    partial void Onusuario_idChanged();
    partial void OnaliasChanging(string value);
    partial void OnaliasChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onfoto_usuarioChanging(System.Data.Linq.Binary value);
    partial void Onfoto_usuarioChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public Usuario()
		{
			this._Albums = new EntitySet<Album>(new Action<Album>(this.attach_Albums), new Action<Album>(this.detach_Albums));
			this._Amigos = new EntitySet<Amigo>(new Action<Amigo>(this.attach_Amigos), new Action<Amigo>(this.detach_Amigos));
			this._Amigos1 = new EntitySet<Amigo>(new Action<Amigo>(this.attach_Amigos1), new Action<Amigo>(this.detach_Amigos1));
			this._Mensajes = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensajes), new Action<Mensaje>(this.detach_Mensajes));
			this._Mensajes1 = new EntitySet<Mensaje>(new Action<Mensaje>(this.attach_Mensajes1), new Action<Mensaje>(this.detach_Mensajes1));
			OnCreated();
		}
		
		[Column(Storage="_usuario_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int usuario_id
		{
			get
			{
				return this._usuario_id;
			}
			set
			{
				if ((this._usuario_id != value))
				{
					this.Onusuario_idChanging(value);
					this.SendPropertyChanging();
					this._usuario_id = value;
					this.SendPropertyChanged("usuario_id");
					this.Onusuario_idChanged();
				}
			}
		}
		
		[Column(Storage="_alias", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_foto_usuario", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary foto_usuario
		{
			get
			{
				return this._foto_usuario;
			}
			set
			{
				if ((this._foto_usuario != value))
				{
					this.Onfoto_usuarioChanging(value);
					this.SendPropertyChanging();
					this._foto_usuario = value;
					this.SendPropertyChanged("foto_usuario");
					this.Onfoto_usuarioChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Album", Storage="_Albums", ThisKey="usuario_id", OtherKey="usuario_id")]
		public EntitySet<Album> Albums
		{
			get
			{
				return this._Albums;
			}
			set
			{
				this._Albums.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Amigo", Storage="_Amigos", ThisKey="usuario_id", OtherKey="usuario_seguido")]
		public EntitySet<Amigo> Amigos
		{
			get
			{
				return this._Amigos;
			}
			set
			{
				this._Amigos.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Amigo1", Storage="_Amigos1", ThisKey="usuario_id", OtherKey="usuario_seguidor")]
		public EntitySet<Amigo> Amigos1
		{
			get
			{
				return this._Amigos1;
			}
			set
			{
				this._Amigos1.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Mensaje", Storage="_Mensajes", ThisKey="usuario_id", OtherKey="usuario_destinatario_id")]
		public EntitySet<Mensaje> Mensajes
		{
			get
			{
				return this._Mensajes;
			}
			set
			{
				this._Mensajes.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Mensaje1", Storage="_Mensajes1", ThisKey="usuario_id", OtherKey="usuario_remitente_id")]
		public EntitySet<Mensaje> Mensajes1
		{
			get
			{
				return this._Mensajes1;
			}
			set
			{
				this._Mensajes1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Amigos(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Amigos(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Amigos1(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Amigos1(Amigo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
		
		private void attach_Mensajes(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Mensajes(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Mensajes1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Mensajes1(Mensaje entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
	}
	
	[Table(Name="dbo.Album")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _album_id;
		
		private string _album_nombre;
		
		private int _usuario_id;
		
		private int _tipo;
		
		private EntitySet<Imagen> _Imagens;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onalbum_idChanging(int value);
    partial void Onalbum_idChanged();
    partial void Onalbum_nombreChanging(string value);
    partial void Onalbum_nombreChanged();
    partial void Onusuario_idChanging(int value);
    partial void Onusuario_idChanged();
    partial void OntipoChanging(int value);
    partial void OntipoChanged();
    #endregion
		
		public Album()
		{
			this._Imagens = new EntitySet<Imagen>(new Action<Imagen>(this.attach_Imagens), new Action<Imagen>(this.detach_Imagens));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_album_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int album_id
		{
			get
			{
				return this._album_id;
			}
			set
			{
				if ((this._album_id != value))
				{
					this.Onalbum_idChanging(value);
					this.SendPropertyChanging();
					this._album_id = value;
					this.SendPropertyChanged("album_id");
					this.Onalbum_idChanged();
				}
			}
		}
		
		[Column(Storage="_album_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string album_nombre
		{
			get
			{
				return this._album_nombre;
			}
			set
			{
				if ((this._album_nombre != value))
				{
					this.Onalbum_nombreChanging(value);
					this.SendPropertyChanging();
					this._album_nombre = value;
					this.SendPropertyChanged("album_nombre");
					this.Onalbum_nombreChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_id", DbType="Int NOT NULL")]
		public int usuario_id
		{
			get
			{
				return this._usuario_id;
			}
			set
			{
				if ((this._usuario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_idChanging(value);
					this.SendPropertyChanging();
					this._usuario_id = value;
					this.SendPropertyChanged("usuario_id");
					this.Onusuario_idChanged();
				}
			}
		}
		
		[Column(Storage="_tipo", DbType="Int NOT NULL")]
		public int tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[Association(Name="Album_Imagen", Storage="_Imagens", ThisKey="album_id", OtherKey="album_id")]
		public EntitySet<Imagen> Imagens
		{
			get
			{
				return this._Imagens;
			}
			set
			{
				this._Imagens.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Album", Storage="_Usuario", ThisKey="usuario_id", OtherKey="usuario_id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Albums.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Albums.Add(this);
						this._usuario_id = value.usuario_id;
					}
					else
					{
						this._usuario_id = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagens(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Imagens(Imagen entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[Table(Name="dbo.Imagen")]
	public partial class Imagen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _imagen_id;
		
		private int _album_id;
		
		private System.Data.Linq.Binary _imagen1;
		
		private EntityRef<Album> _Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimagen_idChanging(int value);
    partial void Onimagen_idChanged();
    partial void Onalbum_idChanging(int value);
    partial void Onalbum_idChanged();
    partial void Onimagen1Changing(System.Data.Linq.Binary value);
    partial void Onimagen1Changed();
    #endregion
		
		public Imagen()
		{
			this._Album = default(EntityRef<Album>);
			OnCreated();
		}
		
		[Column(Storage="_imagen_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int imagen_id
		{
			get
			{
				return this._imagen_id;
			}
			set
			{
				if ((this._imagen_id != value))
				{
					this.Onimagen_idChanging(value);
					this.SendPropertyChanging();
					this._imagen_id = value;
					this.SendPropertyChanged("imagen_id");
					this.Onimagen_idChanged();
				}
			}
		}
		
		[Column(Storage="_album_id", DbType="Int NOT NULL")]
		public int album_id
		{
			get
			{
				return this._album_id;
			}
			set
			{
				if ((this._album_id != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onalbum_idChanging(value);
					this.SendPropertyChanging();
					this._album_id = value;
					this.SendPropertyChanged("album_id");
					this.Onalbum_idChanged();
				}
			}
		}
		
		[Column(Name="imagen", Storage="_imagen1", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary imagen1
		{
			get
			{
				return this._imagen1;
			}
			set
			{
				if ((this._imagen1 != value))
				{
					this.Onimagen1Changing(value);
					this.SendPropertyChanging();
					this._imagen1 = value;
					this.SendPropertyChanged("imagen1");
					this.Onimagen1Changed();
				}
			}
		}
		
		[Association(Name="Album_Imagen", Storage="_Album", ThisKey="album_id", OtherKey="album_id", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Imagens.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Imagens.Add(this);
						this._album_id = value.album_id;
					}
					else
					{
						this._album_id = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Amigo")]
	public partial class Amigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _amigo_id;
		
		private int _usuario_seguido;
		
		private int _usuario_seguidor;
		
		private int _estado;
		
		private string _alias_seguido;
		
		private string _alias_seguidor;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onamigo_idChanging(int value);
    partial void Onamigo_idChanged();
    partial void Onusuario_seguidoChanging(int value);
    partial void Onusuario_seguidoChanged();
    partial void Onusuario_seguidorChanging(int value);
    partial void Onusuario_seguidorChanged();
    partial void OnestadoChanging(int value);
    partial void OnestadoChanged();
    partial void Onalias_seguidoChanging(string value);
    partial void Onalias_seguidoChanged();
    partial void Onalias_seguidorChanging(string value);
    partial void Onalias_seguidorChanged();
    #endregion
		
		public Amigo()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_amigo_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int amigo_id
		{
			get
			{
				return this._amigo_id;
			}
			set
			{
				if ((this._amigo_id != value))
				{
					this.Onamigo_idChanging(value);
					this.SendPropertyChanging();
					this._amigo_id = value;
					this.SendPropertyChanged("amigo_id");
					this.Onamigo_idChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_seguido", DbType="Int NOT NULL")]
		public int usuario_seguido
		{
			get
			{
				return this._usuario_seguido;
			}
			set
			{
				if ((this._usuario_seguido != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_seguidoChanging(value);
					this.SendPropertyChanging();
					this._usuario_seguido = value;
					this.SendPropertyChanged("usuario_seguido");
					this.Onusuario_seguidoChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_seguidor", DbType="Int NOT NULL")]
		public int usuario_seguidor
		{
			get
			{
				return this._usuario_seguidor;
			}
			set
			{
				if ((this._usuario_seguidor != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_seguidorChanging(value);
					this.SendPropertyChanging();
					this._usuario_seguidor = value;
					this.SendPropertyChanged("usuario_seguidor");
					this.Onusuario_seguidorChanged();
				}
			}
		}
		
		[Column(Storage="_estado", DbType="Int NOT NULL")]
		public int estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[Column(Storage="_alias_seguido", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias_seguido
		{
			get
			{
				return this._alias_seguido;
			}
			set
			{
				if ((this._alias_seguido != value))
				{
					this.Onalias_seguidoChanging(value);
					this.SendPropertyChanging();
					this._alias_seguido = value;
					this.SendPropertyChanged("alias_seguido");
					this.Onalias_seguidoChanged();
				}
			}
		}
		
		[Column(Storage="_alias_seguidor", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias_seguidor
		{
			get
			{
				return this._alias_seguidor;
			}
			set
			{
				if ((this._alias_seguidor != value))
				{
					this.Onalias_seguidorChanging(value);
					this.SendPropertyChanging();
					this._alias_seguidor = value;
					this.SendPropertyChanged("alias_seguidor");
					this.Onalias_seguidorChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Amigo", Storage="_Usuario", ThisKey="usuario_seguido", OtherKey="usuario_id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Amigos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Amigos.Add(this);
						this._usuario_seguido = value.usuario_id;
					}
					else
					{
						this._usuario_seguido = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[Association(Name="Usuario_Amigo1", Storage="_Usuario1", ThisKey="usuario_seguidor", OtherKey="usuario_id", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Amigos1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Amigos1.Add(this);
						this._usuario_seguidor = value.usuario_id;
					}
					else
					{
						this._usuario_seguidor = default(int);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Mensaje")]
	public partial class Mensaje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mensaje_id;
		
		private int _usuario_remitente_id;
		
		private int _usuario_destinatario_id;
		
		private string _descripcion;
		
		private string _alias_remitente;
		
		private string _alias_destinatario;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmensaje_idChanging(int value);
    partial void Onmensaje_idChanged();
    partial void Onusuario_remitente_idChanging(int value);
    partial void Onusuario_remitente_idChanged();
    partial void Onusuario_destinatario_idChanging(int value);
    partial void Onusuario_destinatario_idChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onalias_remitenteChanging(string value);
    partial void Onalias_remitenteChanged();
    partial void Onalias_destinatarioChanging(string value);
    partial void Onalias_destinatarioChanged();
    #endregion
		
		public Mensaje()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_mensaje_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mensaje_id
		{
			get
			{
				return this._mensaje_id;
			}
			set
			{
				if ((this._mensaje_id != value))
				{
					this.Onmensaje_idChanging(value);
					this.SendPropertyChanging();
					this._mensaje_id = value;
					this.SendPropertyChanged("mensaje_id");
					this.Onmensaje_idChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_remitente_id", DbType="Int NOT NULL")]
		public int usuario_remitente_id
		{
			get
			{
				return this._usuario_remitente_id;
			}
			set
			{
				if ((this._usuario_remitente_id != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_remitente_idChanging(value);
					this.SendPropertyChanging();
					this._usuario_remitente_id = value;
					this.SendPropertyChanged("usuario_remitente_id");
					this.Onusuario_remitente_idChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_destinatario_id", DbType="Int NOT NULL")]
		public int usuario_destinatario_id
		{
			get
			{
				return this._usuario_destinatario_id;
			}
			set
			{
				if ((this._usuario_destinatario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_destinatario_idChanging(value);
					this.SendPropertyChanging();
					this._usuario_destinatario_id = value;
					this.SendPropertyChanged("usuario_destinatario_id");
					this.Onusuario_destinatario_idChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_alias_remitente", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias_remitente
		{
			get
			{
				return this._alias_remitente;
			}
			set
			{
				if ((this._alias_remitente != value))
				{
					this.Onalias_remitenteChanging(value);
					this.SendPropertyChanging();
					this._alias_remitente = value;
					this.SendPropertyChanged("alias_remitente");
					this.Onalias_remitenteChanged();
				}
			}
		}
		
		[Column(Storage="_alias_destinatario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alias_destinatario
		{
			get
			{
				return this._alias_destinatario;
			}
			set
			{
				if ((this._alias_destinatario != value))
				{
					this.Onalias_destinatarioChanging(value);
					this.SendPropertyChanging();
					this._alias_destinatario = value;
					this.SendPropertyChanged("alias_destinatario");
					this.Onalias_destinatarioChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Mensaje", Storage="_Usuario", ThisKey="usuario_destinatario_id", OtherKey="usuario_id", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Mensajes.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Mensajes.Add(this);
						this._usuario_destinatario_id = value.usuario_id;
					}
					else
					{
						this._usuario_destinatario_id = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[Association(Name="Usuario_Mensaje1", Storage="_Usuario1", ThisKey="usuario_remitente_id", OtherKey="usuario_id", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Mensajes1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Mensajes1.Add(this);
						this._usuario_remitente_id = value.usuario_id;
					}
					else
					{
						this._usuario_remitente_id = default(int);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
